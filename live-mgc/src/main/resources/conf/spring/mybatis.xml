<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"  
	xsi:schemaLocation="
   		http://www.springframework.org/schema/beans 
   		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   		http://www.springframework.org/schema/tx 
   		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
   		http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
   		http://www.springframework.org/schema/context
   		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
 		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="6000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	<!-- mybatis整合 -->
	<bean id="sqlSessionFactory" class="cn.com.citycloud.frame.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:conf/mybatis/mybatis-config.xml" />
        <!--<property name="mapperLocations" value="classpath:cn/com/citycloud/live/business/dao/mybatis/*Dao.xml" />-->
        <property name="mapperLocations" value="classpath:cn/com/citycloud/live/mgc/mail/dao/*Dao.xml" />
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    	<property name="basePackage" value="cn.com.citycloud.live.mgc.mail.dao"/>
    </bean>
    
    <!--配置业务数据源的事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务注解驱动配置(必须在XML事务配置前面，由XML配置事务传播方式) -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />

	<!--配置事务增强,注意要与服务层方法的命名规则相符 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<!--配置事务切面，关联切点和增强-->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* cn.com.citycloud.lives.business.service..*Service*.*(..))"
			advice-ref="txAdvice" />
    </aop:config>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
